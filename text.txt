Что вы должны сделать в консоли Django?

1. Создать двух пользователей (с помощью метода User.objects.create_user('username')).
    - from NewsPortal.models import *
      User.objects.create_user('Murike')

2. Создать два объекта модели Author, связанные с пользователями.
    - Author.objects.create(user=User.objects.get(pk=1),
                            rating=0)

3. Добавить 4 категории в модель Category.
    - Category.objects.create(category='edu')

4. Добавить 2 статьи и 1 новость.
    - Post.objects.create(title='First title', text='Text for the first', rating=13,
                          author=Author.objects.get(pk=1), type=0)

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
    - PostCategory.objects.create(post=Post.objects.get(pk=1), category=Category.objects.get(pk=2))

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
    - Comment.objects.create(post=Post.objects.get(pk=1), user=User.objects.get(pk=1), text='Sample Text', rating=6)

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
    - comment = Comment.objects.get(pk=1)
      comment.like()
      comment.dislike()
      post = Post.objects.get(pk=1)
      post.like()
      post.dislike()

8. Обновить рейтинги пользователей.
    - author = Author.objects.get(pk=1) # Или без "pk", но через цикл for
      author.update_rating()

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
    - Author.objects.all().order_by('-rating').values('user__username', 'rating')[:1]

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи,
    основываясь на лайках/дислайках к этой статье.
    - post = Post.objects.all().order_by('-rating')[:1]
      post.values('date', 'author__user__username', 'rating', 'title')
      post[0].preview

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
    - # ВЗЯТА ПЕРЕМЕННАЯ "post" ИЗ ПРЕДЫДУЩЕГО ВОПРОСА
      Comment.objects.filter(post=post).values('date', 'user__username', 'rating', 'text')